<?php

/**
 * Implements hook_preprocess_page()
 */
function cookprivacy_preprocess_page(&$vars){
  _cookprivacy_add_cookie();
}

/**
 * Aggiunge il messaggio e il javascript necessario al funzionamento dei cookie
 */
function _cookprivacy_add_cookie(){
  $opt = array(
    'attributes' => array(
      'class' => array('btn', 'btn-xs', 'btn-default',),
    ),
  );

  //$msg = 'Questo sito utilizza cookie tecnici e di terze parti per migliorare la tua navigazione. Proseguendo la navigazione acconsenti all\'utilizzo dei cookie.';
  //$msg = 'This site uses cookies(session, persistent, third party) to offer you a better browsing experience. If you continue to browse this website we will assume that you agree to the contents of our cookie policy.';
  $msg = 'This Site uses cookies, which could include third-party cookies, to ensure its technical functioning and analyse visitor information in aggregate form. 
By closing this banner, selecting any link or continuing to browse by accessing any other sections of this Site, you consent to the use of cookies. If you want to learn more about cookies or change your cookie settings click on the "Cookies Policy" button.';
  $msg .= '&nbsp;<span>' . l('Cookies Policy', 'cookies-policy', $opt) . '</span>';

  $opt['attributes']['id'] = 'cookie-agree';

  $msg .= ' <span>' . l('I agree', 'cookies-policy', $opt) . '</span>';

  $data = array(
    '#prefix' => '<div class="wrapper-cookie messages hide">',
    '#suffix' => '</div>',
    'msg' => array(
      '#prefix' => '<div class="alert alert-block alert-info small">',
      '#suffix' => '</div>',
      '#markup' => $msg,
    ),
  );

  drupal_add_js(array('cookprivacy' => array('msg' => render($data),)),array('type' => 'setting'));

  //https://github.com/js-cookie/js-cookie/releases
  if(libraries_get_path('cookie') === false)
  {
    $js = drupal_get_path('module', 'cookprivacy') . '/js/js.cookie.min.js';
    drupal_add_js($js , array('group' => JS_LIBRARY, 'weight' => 1));
  } else {
    $js = libraries_get_path('cookie') . '/js.cookie.min.js';
    drupal_add_js($js , array('group' => JS_LIBRARY, 'weight' => 1));
  }

  $path = drupal_get_path('module', 'cookprivacy') . '/js/cook-privacy.js';
  drupal_add_js($path , array('group' => JS_LIBRARY, 'weight' => 3));
}

/**
 * Implements hook_menu()
 *
 * @return array
 */
function cookprivacy_menu() {
  /*
  $items['privacy'] = array(
    'title' => 'Informativa sulla privacy',
    'page callback' => 'cp_privacy_page',
    'access arguments' => array('access content'),
  );
  $items['cookie'] = array(
    'title' => 'Informativa sui cookie',
    'page callback' => 'cp_cookie_page',
    'access arguments' => array('access content'),
  );
  */
  $items['admin/config/system/cookprivacy'] = array(
    'title' => t('Cookie and privacy settings'),
    'description' => t('Settings for cookie and privacy'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cookprivacy_settings_form'),
    'access arguments' => array('administer children settings'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Cookprivacy settings
 *
 * @param  array $form
 * @param  array &$form_state
 * @return array
 */
function cookprivacy_settings_form($form, &$form_state) {

  $settings = variable_get('cookprivacy', false);

  $opt = array(
    'attributes' => array(
      'target' => '_blank',
    ),
  );
  $desc = 'Visit the ' . l('/cookie', 'cookie', $opt) . ' and ' . l('/privacy', 'privacy', $opt) . ' pages to see the policy.';

  $form = array(
    'titolo' => array(
      '#markup' => '<h3>' . t('Cookie and privacy settings') . '</h3>',
    ),
    'owner' => array(
      '#title' => t('Owner'),
      '#description' => 'Es. Mekit.it or Mario Rossi',
      '#type' => 'textfield',
      '#size' => 100,
      '#required' => TRUE,
    ),
    'mail' => array(
      '#title' => t('E-mail'),
      '#description' => 'Es. mario.rossi@mail.it',
      '#type' => 'textfield',
      '#size' => 100,
      '#required' => TRUE,
    ),
    'website' => array(
      '#title' => t('Website'),
      '#description' => 'Es. www.website.it',
      '#type' => 'textfield',
      '#size' => 100,
      '#required' => TRUE,
    ),
    'social_integration' => array(
      '#title' => t('This website has social buttons'),
      '#description' => t('If this website has some social buttons like Facebook Like Button check this option.'),
      '#type' => 'checkbox',
      '#default_value' => FALSE,
    ),
    'help' => array(
      '#markup' => '<p>' . $desc . '</p>',
    ),
  );

  // Default values
  if (isset($settings['owner'])){
    $form['owner']['#default_value'] = $settings['owner'];
  }
  if (isset($settings['mail'])){
    $form['mail']['#default_value'] = $settings['mail'];
  }
  if (isset($settings['website'])){
    $form['website']['#default_value'] = $settings['website'];
  }
  if (isset($settings['social_integration'])){
    $form['social_integration']['#default_value'] = $settings['social_integration'];
  }

  //Submit button
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save settings'),
  );

  return $form;
}

/**
 * Salvataggio dei settaggi per cookprivacy
 *
 * @param  array $form
 * @param  array &$form_state
 */
function cookprivacy_settings_form_submit($form, &$form_state) {
  $settings = variable_get('cookprivacy', array());
  $settings['owner'] = $form_state['values']['owner'];
  $settings['mail'] = $form_state['values']['mail'];
  $settings['website'] = $form_state['values']['website'];
  $settings['social_integration'] = $form_state['values']['social_integration'];
  variable_set('cookprivacy', $settings);
  drupal_set_message(t('The settings have been saved'));
}

/**
 * @return array
 */
function cp_privacy_page(){
  $settings = cp_get_settings();

  $data = array(
    '#theme' => 'cp_privacy',
    '#company' => $settings['owner'],
    '#website' => $settings['website'],
    '#owner' => $settings['owner'],
    '#mail' => $settings['mail'],
    '#content' => array(),
  );
  return $data;
}

/**
 * @return array
 */
function cp_cookie_page(){
  $settings = cp_get_settings();

  $data = array(
    '#theme' => 'cp_cookie',
    '#social_integration' => $settings['social_integration'],
    '#owner' => $settings['owner'],
    '#mail' => $settings['mail'],
  );
  return $data;
}

/**
 * @return bool|array
 */
function cp_get_settings(){
  $settings = variable_get('cookprivacy', false);
  if (!$settings){
    _cookprivacy_warning();
    $settings['social_integration'] = FALSE;
    $settings['website'] = 'www.website.it';
    $settings['owner'] = 'Company';
    $settings['mail'] = 'mail@mail.it';
  }
  return $settings;
}

function _cookprivacy_warning(){
  $warning = 'The cookprivacy settings aren\'t set. Visit the ' . l('cookprivacy settings page', 'admin/config/system/cookprivacy') . '  to set them';
  drupal_set_message($warning, 'warning');
}

/**
 * Implements hook_theme().
 */
function cookprivacy_theme(){
  return array(
    'cp_privacy' => array(
      // use a template and give the template's name.
      'template' => 'cp-privacy',
      'variables' => array(
        'content' => array(),
        'company' => NULL,
        'website' => NULL,
        'owner' => NULL,
        'mail' => NULL,
      ),
      'pattern' => 'cp-privacy__',
    ),
    'cp_cookie' => array(
      // use a template and give the template's name.
      'template' => 'cp-cookie',
      'variables' => array(
        'social_integration' => false,
        'owner' => NULL,
        'mail' => NULL,
      ),
      'pattern' => 'cp-cookie__',
    ),
  );
}