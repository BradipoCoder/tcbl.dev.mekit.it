<?php

require_once ("vendor/autoload.php");

/**
 * @todo: sensitive data should be stored in and retrived from db with variable_(set|get)
 *
 * @return array
 */
function tcbl_feed_get_default_generation_options() {
  $generate_feed_options = [
    "default" => [
      "max_items" => 3
    ],
    "plugin" => [
      // "tcbl_zine" => [
      //   "max_items" => 4
      // ],
      // "tcbl_labs" => [
      //   "max_items" => 3
      // ],
      // Facebook Ã¨ troppo complicato,
      // nell'agosto del 2021 ci ho nuovamente rinunciato
      // interfaccia di merda che non lascia togliere dei prodotti (inutili) nella app
      // "facebook" => [
      //   "max_items" => 10,
      //   'app_id' => '301393660390585',
      //   'app_secret' => 'fa161c64d4663bf34c562c007a02dc59',
      //   'default_graph_version' => 'v2.12',
      // ],
      "instagram" => [
        "max_items" => 10,
        // Added by luca 26 agosto 2021
        // 'app_id' => '301393660390585',
        // 'app_secret' => 'fa161c64d4663bf34c562c007a02dc59',
        // 'access_token' => 'IGQVJVeVRGRlBhVUpBb2NfU2F1dDJnREJxdE9ETXB1YXh3VVVWXzFHUjRacEpzeVRXU2NQTEtHZAjZA6M21ERDdueGh4ckxkSktGbl9WRzItV0F0T0VQY2lsWUpFSk9SeVEtYmp1V1VsamNvUWNIVXFfZAwZDZD',
      ],
      "twitter" => [
        "max_items" => 10,
        "consumer_key"            => "05rhm0AJq1Wcl8VdVR1EKb1qY",
        "consumer_secret"         => "ozj7VwhS2GO3anJTpS82OWUtrEEzx7uwSKCh7bWEhIoVA3swl3",
        "access_token"            => "776749216442056704-9hZR2zniP7UTabNDtOFdFowoPDqhMpj",
        "access_token_secret"     => "mqx0lSHqvYNKErjd1cXRSzl8M9XJ05Jz57bBEWCZAEhQE",
      ],
    ]
  ];

  return $generate_feed_options;
}

/**
 * Implements hook_cron().
 */
function tcbl_feed_cron() {
  //variable_set('tcbl_feed_cron_last_exec', 0);
  $default_interval = 0.5 * 60 * 60; // Half an hour
  if(!variable_get('tcbl_feed_cron_interval')) {
    variable_set('tcbl_feed_cron_interval', $default_interval);
  }
  $interval = variable_get('tcbl_feed_cron_interval', $default_interval);
  $last_exec = variable_get('tcbl_feed_cron_last_exec', 0);
  $now = time();

  if ($last_exec + $interval > $now) {
    return;
  }

  variable_set('tcbl_feed_cron_last_exec', $now);

  //--------------------------------------------FEED GENERATION
  $generate_feed_options = tcbl_feed_get_default_generation_options();
  tcbl_feed_generate_feeds($generate_feed_options);
  watchdog('TCBL Feed', 'Feeds updated. ', array(), WATCHDOG_INFO);// json_encode($res)
}

/**
 * @param array $getFeedOptions
 *
 * @return array
 */
function tcbl_feed_get_renderable_feeds($getFeedOptions = []) {
  $answer = [];

  //--------------------------------------------FEED GENERATION [NOW DONE BY CRON]
  // $generate_feed_options = tcbl_feed_get_default_generation_options();
  // tcbl_feed_generate_feeds($generate_feed_options);

  $feeds = \Mekit\TcblFeed\FeedFactory::getFeeds($getFeedOptions);

  if (count($feeds)) {
    //$answer['content'] = t('Number of feeds: ' . count($feeds));
    $answer['content'] = [];
    $answer['content']['feeds'] = [];

    $n = 0;
    /** @var \Mekit\TcblFeed\FeedItem $feed */
    foreach ($feeds as $feed) {
      $n++;
      $feedThemeItem = [
        '#theme' => 'tcbl_feed_item',
        '#feed_item' => $feed,
      ];
      array_push($answer['content']['feeds'], $feedThemeItem);
      if (isset($getFeedOptions['max_items'])){
        if ($n == $getFeedOptions['max_items']){
          break;
        }
      }
    }
  }

  return $answer;
}

/**
 * @param array $generateFeedOptions
 *
 * @return array
 */
function tcbl_feed_generate_feeds($generateFeedOptions = []) {
  try {
    return \Mekit\TcblFeed\FeedFactory::generateFeeds($generateFeedOptions);
  } catch(\ReflectionException $e) {
    //bad stuff :-(
  }
}

/**
 * @param $vars
 */
function tcbl_feed_preprocess_tcbl_feed_item(&$vars) {
  /** @var \Mekit\TcblFeed\FeedItem $feedItem */
  $feedItem = $vars["feed_item"];

  // Theme hook suggestions
  $vars["theme_hook_suggestions"] = [];
  if($feedItem->isSocial()) {
    $vars["theme_hook_suggestions"][] = "tcbl_feed_item__social";
  }
  $vars["theme_hook_suggestions"][] = "tcbl_feed_item__" . $feedItem->getSource();
  $vars["theme_hook_suggestions"][] = "tcbl_feed_item__" . $feedItem->getSource() . '__' . $feedItem->getType();

  // Classes
  $classStub = "feed-item";
  $classes = [];
  $classes[] = $classStub;
  if($feedItem->isSocial()) {
    $classes[] = $classStub . "-social";
  }
  $classes[] = $classStub . "-" . str_replace("_", "-", $feedItem->getSource());
  $classes[] = $classStub . "-" . str_replace("_", "-", $feedItem->getType());
  $vars["classes_array"] = $classes;

  // Fontawesome icon
  $icons = ["fa"];
  switch($feedItem->getSource()) {
    case "facebook":
      $icons[] = "fa-facebook-f";
      break;
    case "instagram":
      $icons[] = "fa-instagram";
      break;
    case "twitter":
      $icons[] = "fa-twitter";
      break;
    default:
      $icons[] = "fa-rss";
      break;
  }
  $vars["fontawesome_icon"] = implode(" ", $icons);
}

/**
 * Implements hook_theme().
 *
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 *
 * @return array
 */
function tcbl_feed_theme($existing, $type, $theme, $path) {
  return [
    'tcbl_feed_item' => [
      'template' => 'tcbl-feed-item',
      'variables' => [
        'feed_item' => NULL,
        /*'classes' => NULL,*/
        'fontawesome_icon' => NULL,
      ],
      'path' => drupal_get_path('module', 'tcbl_feed') . '/templates',
      /*'pattern' => 'tcbl-feed-item__',*/
    ],
  ];
}
