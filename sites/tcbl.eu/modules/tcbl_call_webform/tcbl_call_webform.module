<?php

/**
 * Implements hook_node_view().
 */
function tcbl_call_webform_node_view($node, $view_mode, $langcode) {
  if ($node->nid != 360) return;

  /** \stdClass $user */
  global $user;

  if (!user_has_role(2))
  {
    $node->content['webform']['#enabled'] = FALSE;
    $node->content['body'][0]['#markup'] = '<p>'
                                           . t("Please log in to view this resource.")
                                           .'</p>';
    return;
  }

  // Check if already signed up to Thela
  $can_sign_up = _tcbl_call_webform_check_if_can_sign_up($user);

  if(!$can_sign_up)
  {
    $node->content['webform']['#enabled'] = FALSE;

    $markup = [];
    $markup[] = '<p>' . t("You have already signed up at the Thela Platform.") . '</p>';
    $opt = [
      'attributes' => [
        'class' => ['btn','btn-primary'],
        'target' => '_blank'
      ]
    ];
    $markup[] = '<p>' . l(t('Go to the Thela Platform'),'https://thela.cleviria.com', $opt) .'</p>';

    $node->content['body'][0]['#markup'] = implode("\n", $markup);

  }
}

/**
 * BIG PINK BUTTON in https://tcbl.eu/call-associate-enterprises (nid=340)
 *
 * @param array $vars
 */
function tcbl_call_webform_preprocess_field(&$vars)
{
  if(isset($vars["element"]["#object"]) && $vars["element"]["#object"] instanceof \ParagraphsItemEntity) {
    /** @var \ParagraphsItemEntity $pi */
    $pi = $vars["element"]["#object"];
    if($pi->hostEntityType() == "node" &&  $pi->hostEntityId() == 340) {
      if($pi->field_name == "field_content") {
        /** \stdClass $user */
        global $user;

        $opt = [
          'attributes' => [
            'class' => ['btn','btn-info', 'btn-lg']
          ]
        ];

        if (!user_has_role(2)) {
          $button = l(t('Login with TCBL'), 'user/gluuSSO', $opt);
        } else {
          $can_sign_up = _tcbl_call_webform_check_if_can_sign_up($user);

          if($can_sign_up)
          {
            $button = l(t('Apply'),'node/360', $opt);
          } else {
            $opt['attributes']['target'] = '_blank';
            $button = l(t('Go to the Thela Platform'),'https://thela.cleviria.com', $opt);
          }
        }

        // Substitute {{{THELA-SIGNUP-BUTTON}}} in the text
        $vars['items'][0]['#markup'] = str_replace('{{{THELA-SIGNUP-BUTTON}}}', $button, $vars['items'][0]['#markup']);

      }
    }
  }
}


/**
 *
 * Confirmation page
 *
 * Implements hook_preprocess_HOOK().
 * @see sites/all/themes/mekit/templates/webform/webform-confirmation.tpl.php
 *
 * @param array $variables
 */
function tcbl_call_webform_preprocess_webform_confirmation(&$variables) {
  if(!isset($variables["node"]) || !isset($variables["node"]->nid) || $variables["node"]->nid != 360){
    return;
  }

  $cm = [];
  $cm[] = '<h1 class="margin-b-1">' . t("You have successfully registered for the 2018 Call for Associate Enterprises") .'</h1>';
  $cm[] = '<p>' . t("You have been granted a free Supplier license on the Thela platform, you have been linked as a “Supplier” to TCBL, and you have been assigned the Assessment questionnaire for the 2018 Call.") .'</p>';
  //REMOVED: A confirmation email has been sent to your mailbox.
  $cm[] = '<p>' . t("To access the Assessment questionnaire, you must go to the Thela homepage and click “Login with TCBL”. This takes you to your personal homepage on Thela, where you click “Compiling” to enter the Assessment questionnaire.") .'</p>';
  $cm[] = '<p>' . t("Save the Assessment questionnaire as you work (you can generate a PDF at any time), and click on “Complete” when you have finished or at any rate before the final deadline.") .'</p>';

  $opt = [
    'attributes' => [
      'class' => ['btn','btn-primary', 'margin-t-1'],
      'target' => '_blank'
    ]
  ];
  $cm[] = '<p>' . l(t('Go to the Thela Platform'),'https://thela.cleviria.com', $opt) .'</p>';

  $cm[] = '<p class="margin-t-2">' . t('For information about the Call, please contact @name, <a href="mailto:@mail">@mail</a>.',
                                       ["@name" => "Paolo Guarnieri",
                                        "@mail" => "tcbl@comune.prato.it"
                                       ]) . '</p>';

  /*
  $cm[] = '<p>' . t('For technical assistance with your Thela signup,<br /> please contact <a href="mailto:@mail">@mail</a>, @phone',
                                       [
                                        "@mail" => "support@cleviria.it",
                                        "@phone" => "+39 0557 766702",
                                       ]) . '</p>';
  */
  $opt = [
    'attributes' => [
      'class' => ['btn','btn-info', 'margin-t-1'],
    ]
  ];
  $cm[] = '<p>' . l(t('Return to the Call for Associate Enterprises'),'node/340', $opt) .'</p>';

  $variables["confirmation_message"] = implode("\n", $cm);
  $variables["hide_back_to_home_link"] = true;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @param array $form
 * @param array $form_state
 * @param string $form_id
 */
function tcbl_call_webform_form_webform_client_form_360_alter(&$form, &$form_state, $form_id)
{
  /** \stdClass $user */
  global $user;
  $account = user_load($user->uid);

  // Default values
  $form['submitted']['firstname']['#default_value'] = isset($account->field_firstname[LANGUAGE_NONE][0]["value"]) ? $account->field_firstname[LANGUAGE_NONE][0]["value"] : "";
  $form['submitted']['lastname']['#default_value'] = isset($account->field_lastname[LANGUAGE_NONE][0]["value"]) ? $account->field_lastname[LANGUAGE_NONE][0]["value"] : "";

  // Testing values - delete these
//  $form['submitted']['companyName']['#default_value'] = "Mekit";
//  $form['submitted']['address']['#default_value'] = "Corso Lecce, 28";
//  $form['submitted']['city']['#default_value'] = "Torino";
//  $form['submitted']['cap']['#default_value'] = "10134";
//  $form['submitted']['country']['#default_value'] = "IT";


  $is_submitted = (isset($form_state["input"]["op"]) && $form_state["input"]["op"] === "Submit");


  if($is_submitted)
  {
    //dpm($form_state, "FORM STATE");

    $sign_up_data = [];
    if(isset($form_state['input']['submitted']) && is_array($form_state['input']['submitted'])) {
      $sign_up_data = $form_state['input']['submitted'];
    }

    //dpm($sign_up_data, "Thela Sign Up Data");

    try
    {
      _tcbl_call_webform_send_submission_to_thela($sign_up_data);
    } catch(\Exception $e) {
      form_set_error("email", "Error #".$e->getCode().": " . $e->getMessage());
    }
  }

}


/**
 * @param array $data
 *
 * @throws \Exception
 */
function _tcbl_call_webform_send_submission_to_thela($data) {
  $error_messages = [
    "0" => "OK",
    "1" => "Company name is not set",
    "2" => "User with this email is already registered",
    "3" => "Country must be a two digit string",
    "255" => "Blimey! An unknown error occured!",
  ];

  $answer = new \stdClass();
  $answer->errorCode = 255;
  $answer->message = $error_messages[$answer->errorCode];

  $ch = curl_init();

  curl_setopt($ch, CURLOPT_URL,"https://thela.cleviria.it/tcblCall");
  curl_setopt($ch, CURLOPT_POST, TRUE);
  curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
  curl_setopt($ch, CURLOPT_TIMEOUT, 30);
  $response = curl_exec($ch);
  curl_close ($ch);

  //cleanup invalid response
  $response = trim($response);
  $response = str_replace('",', '"', $response);//asked to be fixed

  $ro = @json_decode($response);
  if($ro instanceof \stdClass && isset($ro->returnValue))
  {
    $answer->errorCode = $ro->returnValue;
    $answer->message = array_key_exists($ro->returnValue, $error_messages) ? $error_messages[$ro->returnValue] : $answer->message;
  }

  //handle Error
  if($answer->errorCode) {
    throw new \Exception($answer->message, $answer->errorCode);
  }
}


/**
 * Check if user can sign up to Thela.
 * For now an existing submission will suffice
 *
 * @param \stdClass $user
 *
 * @return bool
 */
function _tcbl_call_webform_check_if_can_sign_up($user) {
  require_once("sites/all/modules/webform/includes/webform.submissions.inc");
  $answer = true;

  if(isset($user->uid)) {
    $submissionCount = intval(webform_get_submission_count(360, $user->uid));
    $answer = $submissionCount == 0;
  }

  return $answer;
}






